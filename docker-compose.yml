services:
  frontend:
    build:
      context: ./Frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - chat-network

  backend:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - DB_URL=jdbc:mysql://mysql:3306/chatapp?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true
      - DB_USERNAME=chatapp_user
      - DB_PASSWORD=chatapp_password
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - AUTH0_ISSUER_URI=${AUTH0_ISSUER_URI}
      - AUTH0_AUDIENCE=${AUTH0_AUDIENCE}
    depends_on:
      - mysql
      - kafka
      - zookeeper
    networks:
      - chat-network

  mysql:
    image: mysql:8.0
    environment:
      - MYSQL_DATABASE=chatapp
      - MYSQL_USER=chatapp_user
      - MYSQL_PASSWORD=chatapp_password
      - MYSQL_ROOT_PASSWORD=root_password
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - chat-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - chat-network

  kafka:
    image: confluentinc/cp-kafka:7.4.4
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - chat-network

  topic-init:
    image: confluentinc/cp-kafka:7.4.4
    depends_on:
      - kafka
    entrypoint: ["/bin/sh", "-c"]
    command: >
      "sleep 10 &&
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic message_persist --partitions 1 --replication-factor 1"
    networks:
      - chat-network

networks:
  chat-network:
    driver: bridge

volumes:
  mysql_data: 