# Production Profile Configuration
spring.application.name=chatapp

# Database Configuration
spring.datasource.url=jdbc:postgresql://${PGHOST}:${PGPORT}/${PGDATABASE}
spring.datasource.username=${PGUSER}
spring.datasource.password=${PGPASSWORD}
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.sql.init.mode=always
spring.sql.init.schema-locations=classpath:schema.sql
spring.sql.init.continue-on-error=true

# Connection Pool Configuration
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.max-lifetime=1200000

# STOMP Broker Configuration
spring.messaging.stomp.broker.relay.enabled=false
spring.messaging.stomp.broker.relay.virtual-host=/
spring.messaging.stomp.broker.relay.client-login=guest
spring.messaging.stomp.broker.relay.system-login=guest
spring.messaging.stomp.broker.relay.system-heartbeat-send-interval=10000
spring.messaging.stomp.broker.relay.system-heartbeat-receive-interval=10000
spring.messaging.stomp.broker.relay.client-heartbeat-send-interval=10000
spring.messaging.stomp.broker.relay.client-heartbeat-receive-interval=10000

# Kafka Configuration
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.group-id=chatapp
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.abhi.chatapp.entity
spring.kafka.consumer.properties.spring.json.use.type.headers=false
spring.kafka.consumer.properties.spring.json.value.default.type=com.abhi.chatapp.entity.Message

# Auth0 Configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${AUTH0_ISSUER_URI}
spring.security.oauth2.resourceserver.jwt.claims-set-uri=${AUTH0_ISSUER_URI}.well-known/jwks.json
auth0.audience=${AUTH0_AUDIENCE}

# Logging Configuration
logging.level.root=INFO
logging.level.com.abhi.chatapp=INFO
logging.level.com.abhi.chatapp.controller=INFO
logging.level.com.abhi.chatapp.service=INFO
logging.level.com.abhi.chatapp.repository=WARN
logging.level.org.springframework.web=INFO
logging.level.org.springframework.security=INFO
logging.level.org.hibernate=ERROR
logging.level.org.springframework.messaging=INFO
logging.level.org.springframework.web.socket=ERROR
logging.level.org.springframework.messaging.simp=ERROR
logging.level.org.springframework.security.oauth2=ERROR

# Logging Pattern
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Server Configuration
server.port=${PORT:8080}
server.forward-headers-strategy=NATIVE
server.tomcat.max-threads=50
server.tomcat.min-spare-threads=10
server.tomcat.max-connections=1000
server.tomcat.accept-count=100
server.tomcat.connection-timeout=5000

# WebSocket Configuration
spring.websocket.max-text-message-size=8192
spring.websocket.max-binary-message-size=8192
spring.websocket.enabled=true

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=when_authorized
management.health.db.enabled=true
management.health.diskspace.enabled=true
management.metrics.export.prometheus.enabled=true